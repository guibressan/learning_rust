{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13","program":"/home/gui/.asdf/installs/rust/1.48.0/toolchains/1.48.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=f4e562b48f08273a","-C","extra-filename=-f4e562b48f08273a","--out-dir","/home/gui/Projects/rustLearning/target/rls/debug/deps","-L","dependency=/home/gui/Projects/rustLearning/target/rls/debug/deps","--extern","futures_core=/home/gui/Projects/rustLearning/target/rls/debug/deps/libfutures_core-9b3c3e80d47ae4ea.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gui/.asdf/installs/rust/1.48.0/toolchains/1.48.0-x86_64-unknown-linux-gnu"],"output":"/home/gui/Projects/rustLearning/target/rls/debug/deps/libfutures_channel-f4e562b48f08273a.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[13040862027936752094,5057136896634025939]},"crate_root":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src","external_crates":[{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[16411643559391870569,1441184762146066028]}}],"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":259}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":535},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":91},{"krate":0,"index":382},{"krate":0,"index":393},{"krate":0,"index":391},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":395},{"krate":0,"index":410},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":413},{"krate":0,"index":426},{"krate":0,"index":424},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":454},{"krate":0,"index":452},{"krate":0,"index":451},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":141},{"krate":0,"index":156},{"krate":0,"index":171},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143432,"byte_end":7143501,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143502,"byte_end":7143525,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143526,"byte_end":7143529,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143530,"byte_end":7143600,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143601,"byte_end":7143680,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143681,"byte_end":7143756,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143757,"byte_end":7143829,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143830,"byte_end":7143912,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143913,"byte_end":7143990,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7143991,"byte_end":7144068,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144069,"byte_end":7144114,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144115,"byte_end":7144118,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144119,"byte_end":7144195,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144196,"byte_end":7144199,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144200,"byte_end":7144219,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144220,"byte_end":7144223,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144224,"byte_end":7144290,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144291,"byte_end":7144371,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144372,"byte_end":7144429,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144430,"byte_end":7144464,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144465,"byte_end":7144468,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144469,"byte_end":7144539,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144540,"byte_end":7144619,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144620,"byte_end":7144643,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144644,"byte_end":7144647,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144648,"byte_end":7144668,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144669,"byte_end":7144672,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144673,"byte_end":7144739,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144740,"byte_end":7144816,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144817,"byte_end":7144897,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144898,"byte_end":7144978,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7144979,"byte_end":7145051,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145052,"byte_end":7145111,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145112,"byte_end":7145115,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145116,"byte_end":7145150,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145151,"byte_end":7145189,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145190,"byte_end":7145249,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145250,"byte_end":7145278,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7145279,"byte_end":7145349,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148740,"byte_end":7148746,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148592,"byte_end":7148643,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148644,"byte_end":7148647,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148648,"byte_end":7148711,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148938,"byte_end":7148953,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148783,"byte_end":7148837,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148838,"byte_end":7148841,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148842,"byte_end":7148909,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149225,"byte_end":7149233,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149080,"byte_end":7149128,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149129,"byte_end":7149132,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149133,"byte_end":7149196,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149435,"byte_end":7149452,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149283,"byte_end":7149334,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149335,"byte_end":7149338,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149339,"byte_end":7149406,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149729,"byte_end":7149738,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":383}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149619,"byte_end":7149678,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149877,"byte_end":7149889,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149769,"byte_end":7149833,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150099,"byte_end":7150111,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150021,"byte_end":7150087,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150561,"byte_end":7150568,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150478,"byte_end":7150549,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150785,"byte_end":7150800,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150698,"byte_end":7150773,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151625,"byte_end":7151632,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151542,"byte_end":7151613,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151775,"byte_end":7151790,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151688,"byte_end":7151763,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151931,"byte_end":7151941,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151854,"byte_end":7151919,"line_start":241,"line_end":241,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152049,"byte_end":7152064,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151983,"byte_end":7152037,"line_start":246,"line_end":246,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155469,"byte_end":7155476,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7154843,"byte_end":7154923,"line_start":353,"line_end":353,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7154924,"byte_end":7154927,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7154928,"byte_end":7155007,"line_start":355,"line_end":355,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155008,"byte_end":7155085,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155086,"byte_end":7155157,"line_start":357,"line_end":357,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155158,"byte_end":7155231,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155232,"byte_end":7155302,"line_start":359,"line_end":359,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155303,"byte_end":7155306,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155307,"byte_end":7155361,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155362,"byte_end":7155449,"line_start":362,"line_end":362,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7155450,"byte_end":7155461,"line_start":363,"line_end":363,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156740,"byte_end":7156749,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156228,"byte_end":7156304,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156305,"byte_end":7156315,"line_start":392,"line_end":392,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156316,"byte_end":7156319,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156320,"byte_end":7156400,"line_start":394,"line_end":394,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156401,"byte_end":7156480,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156481,"byte_end":7156494,"line_start":396,"line_end":396,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156495,"byte_end":7156498,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156499,"byte_end":7156578,"line_start":398,"line_end":398,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156579,"byte_end":7156655,"line_start":399,"line_end":399,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7156656,"byte_end":7156732,"line_start":400,"line_end":400,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167519,"byte_end":7167527,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167406,"byte_end":7167476,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167481,"byte_end":7167507,"line_start":722,"line_end":722,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168088,"byte_end":7168098,"line_start":741,"line_end":741,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167872,"byte_end":7167906,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167911,"byte_end":7167914,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167919,"byte_end":7167964,"line_start":738,"line_end":738,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167969,"byte_end":7168040,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168045,"byte_end":7168076,"line_start":740,"line_end":740,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168726,"byte_end":7168736,"line_start":758,"line_end":758,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168215,"byte_end":7168289,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168294,"byte_end":7168332,"line_start":747,"line_end":747,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168337,"byte_end":7168340,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168345,"byte_end":7168363,"line_start":749,"line_end":749,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168368,"byte_end":7168371,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168376,"byte_end":7168400,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168405,"byte_end":7168408,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168413,"byte_end":7168472,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168477,"byte_end":7168526,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168531,"byte_end":7168607,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168612,"byte_end":7168640,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168645,"byte_end":7168714,"line_start":757,"line_end":757,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169061,"byte_end":7169070,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7168980,"byte_end":7169049,"line_start":768,"line_end":768,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169260,"byte_end":7169273,"line_start":774,"line_end":774,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169174,"byte_end":7169248,"line_start":773,"line_end":773,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169489,"byte_end":7169499,"line_start":781,"line_end":781,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169386,"byte_end":7169477,"line_start":780,"line_end":780,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169617,"byte_end":7169630,"line_start":786,"line_end":786,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169547,"byte_end":7169605,"line_start":785,"line_end":785,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169878,"byte_end":7169893,"line_start":794,"line_end":794,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7169813,"byte_end":7169866,"line_start":793,"line_end":793,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170161,"byte_end":7170174,"line_start":802,"line_end":802,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170101,"byte_end":7170149,"line_start":801,"line_end":801,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170455,"byte_end":7170465,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170388,"byte_end":7170443,"line_start":811,"line_end":811,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170786,"byte_end":7170795,"line_start":823,"line_end":823,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170705,"byte_end":7170774,"line_start":822,"line_end":822,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170987,"byte_end":7171000,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170901,"byte_end":7170975,"line_start":827,"line_end":827,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171208,"byte_end":7171218,"line_start":835,"line_end":835,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171105,"byte_end":7171196,"line_start":834,"line_end":834,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171935,"byte_end":7171945,"line_start":860,"line_end":860,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171740,"byte_end":7171774,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171779,"byte_end":7171782,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171787,"byte_end":7171860,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7171865,"byte_end":7171923,"line_start":859,"line_end":859,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172310,"byte_end":7172324,"line_start":870,"line_end":870,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172064,"byte_end":7172103,"line_start":865,"line_end":865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172108,"byte_end":7172111,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172116,"byte_end":7172191,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172196,"byte_end":7172272,"line_start":868,"line_end":868,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172277,"byte_end":7172298,"line_start":869,"line_end":869,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172483,"byte_end":7172496,"line_start":875,"line_end":875,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172413,"byte_end":7172471,"line_start":874,"line_end":874,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172744,"byte_end":7172759,"line_start":883,"line_end":883,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172679,"byte_end":7172732,"line_start":882,"line_end":882,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173036,"byte_end":7173049,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7172976,"byte_end":7173024,"line_start":890,"line_end":890,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176660,"byte_end":7176665,"line_start":1006,"line_end":1006,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176423,"byte_end":7176487,"line_start":1002,"line_end":1002,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176492,"byte_end":7176495,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176500,"byte_end":7176575,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176580,"byte_end":7176648,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177448,"byte_end":7177456,"line_start":1026,"line_end":1026,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177060,"byte_end":7177135,"line_start":1018,"line_end":1018,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177140,"byte_end":7177143,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177148,"byte_end":7177220,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177225,"byte_end":7177299,"line_start":1021,"line_end":1021,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177304,"byte_end":7177324,"line_start":1022,"line_end":1022,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177329,"byte_end":7177332,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177337,"byte_end":7177411,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7177416,"byte_end":7177436,"line_start":1025,"line_end":1025,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182340,"byte_end":7182345,"line_start":1160,"line_end":1160,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182103,"byte_end":7182167,"line_start":1156,"line_end":1156,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182172,"byte_end":7182175,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182180,"byte_end":7182255,"line_start":1158,"line_end":1158,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182260,"byte_end":7182328,"line_start":1159,"line_end":1159,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182847,"byte_end":7182855,"line_start":1174,"line_end":1174,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182459,"byte_end":7182534,"line_start":1166,"line_end":1166,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182539,"byte_end":7182542,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182547,"byte_end":7182619,"line_start":1168,"line_end":1168,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182624,"byte_end":7182698,"line_start":1169,"line_end":1169,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182703,"byte_end":7182723,"line_start":1170,"line_end":1170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182728,"byte_end":7182731,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182736,"byte_end":7182810,"line_start":1172,"line_end":1172,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182815,"byte_end":7182835,"line_start":1173,"line_end":1173,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":563},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":473},{"krate":0,"index":479},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":290},{"krate":0,"index":297},{"krate":0,"index":482},{"krate":0,"index":486},{"krate":0,"index":300},{"krate":0,"index":490},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":492},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":318}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195189,"byte_end":7195259,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195260,"byte_end":7195263,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195264,"byte_end":7195319,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195813,"byte_end":7195821,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195578,"byte_end":7195654,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195655,"byte_end":7195658,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195659,"byte_end":7195716,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195717,"byte_end":7195784,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7196006,"byte_end":7196012,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195856,"byte_end":7195915,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195916,"byte_end":7195919,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7195920,"byte_end":7195977,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199116,"byte_end":7199123,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7197917,"byte_end":7198005,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198006,"byte_end":7198009,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198010,"byte_end":7198085,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198086,"byte_end":7198089,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198090,"byte_end":7198170,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198171,"byte_end":7198249,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198250,"byte_end":7198327,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198328,"byte_end":7198406,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198407,"byte_end":7198455,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198456,"byte_end":7198459,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198460,"byte_end":7198520,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198521,"byte_end":7198524,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198525,"byte_end":7198539,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198540,"byte_end":7198543,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198544,"byte_end":7198551,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198552,"byte_end":7198586,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198587,"byte_end":7198625,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198626,"byte_end":7198629,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198630,"byte_end":7198685,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198686,"byte_end":7198689,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198690,"byte_end":7198712,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198713,"byte_end":7198757,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198758,"byte_end":7198809,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198810,"byte_end":7198858,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198859,"byte_end":7198891,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198892,"byte_end":7198899,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198900,"byte_end":7198903,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198904,"byte_end":7198950,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198951,"byte_end":7198954,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198955,"byte_end":7198994,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7198995,"byte_end":7199040,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199041,"byte_end":7199092,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199093,"byte_end":7199100,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199101,"byte_end":7199108,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208386,"byte_end":7208390,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7207893,"byte_end":7207945,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7207950,"byte_end":7207953,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7207958,"byte_end":7208030,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208035,"byte_end":7208107,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208112,"byte_end":7208144,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208149,"byte_end":7208152,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208157,"byte_end":7208229,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208234,"byte_end":7208304,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208309,"byte_end":7208374,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209042,"byte_end":7209055,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208460,"byte_end":7208521,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208526,"byte_end":7208570,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208575,"byte_end":7208578,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208583,"byte_end":7208602,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208607,"byte_end":7208610,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208615,"byte_end":7208685,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208690,"byte_end":7208764,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208769,"byte_end":7208772,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208777,"byte_end":7208845,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208850,"byte_end":7208923,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7208928,"byte_end":7209000,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209005,"byte_end":7209030,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209419,"byte_end":7209431,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209151,"byte_end":7209220,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209225,"byte_end":7209269,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209274,"byte_end":7209277,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209282,"byte_end":7209353,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209358,"byte_end":7209407,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209855,"byte_end":7209866,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209516,"byte_end":7209581,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209586,"byte_end":7209607,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209612,"byte_end":7209615,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209620,"byte_end":7209695,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209700,"byte_end":7209771,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209776,"byte_end":7209843,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210090,"byte_end":7210105,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7209928,"byte_end":7210021,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210026,"byte_end":7210078,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210566,"byte_end":7210578,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":485}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210298,"byte_end":7210373,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210374,"byte_end":7210377,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210378,"byte_end":7210469,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210470,"byte_end":7210537,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210968,"byte_end":7210976,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210805,"byte_end":7210876,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210877,"byte_end":7210911,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211584,"byte_end":7211589,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211212,"byte_end":7211285,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211290,"byte_end":7211305,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211310,"byte_end":7211313,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211318,"byte_end":7211385,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211390,"byte_end":7211452,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211457,"byte_end":7211530,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211535,"byte_end":7211572,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212020,"byte_end":7212028,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211644,"byte_end":7211711,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211716,"byte_end":7211719,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211724,"byte_end":7211791,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211796,"byte_end":7211799,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211804,"byte_end":7211877,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211882,"byte_end":7211948,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211953,"byte_end":7211956,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211961,"byte_end":7212008,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141443,"byte_end":7141447,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141484,"byte_end":7141488,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141504,"byte_end":7141508,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142346,"byte_end":7142353,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142606,"byte_end":7142613,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142976,"byte_end":7142983,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191726,"byte_end":7191731,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191769,"byte_end":7191774,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191791,"byte_end":7191795,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191988,"byte_end":7191993,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7194890,"byte_end":7194895,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148521,"byte_end":7148541,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148566,"byte_end":7148584,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149055,"byte_end":7149070,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149594,"byte_end":7149611,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150154,"byte_end":7150163,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150443,"byte_end":7150452,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150462,"byte_end":7150471,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150959,"byte_end":7150971,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151178,"byte_end":7151190,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151492,"byte_end":7151504,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151520,"byte_end":7151532,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152132,"byte_end":7152144,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152301,"byte_end":7152313,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152462,"byte_end":7152474,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7154570,"byte_end":7154580,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7157249,"byte_end":7157269,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7160127,"byte_end":7160145,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167390,"byte_end":7167396,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170363,"byte_end":7170378,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173248,"byte_end":7173254,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173346,"byte_end":7173361,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173453,"byte_end":7173473,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7174574,"byte_end":7174592,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7175843,"byte_end":7175863,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176108,"byte_end":7176126,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176405,"byte_end":7176413,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7179885,"byte_end":7179893,"line_start":1090,"line_end":1090,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7179925,"byte_end":7179933,"line_start":1092,"line_end":1092,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7180034,"byte_end":7180042,"line_start":1098,"line_end":1098,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7180922,"byte_end":7180930,"line_start":1125,"line_end":1125,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182076,"byte_end":7182093,"line_start":1155,"line_end":1155,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7184769,"byte_end":7184786,"line_start":1224,"line_end":1224,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7184887,"byte_end":7184904,"line_start":1230,"line_end":1230,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7185780,"byte_end":7185797,"line_start":1257,"line_end":1257,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7186983,"byte_end":7186997,"line_start":1293,"line_end":1293,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187280,"byte_end":7187292,"line_start":1305,"line_end":1305,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187818,"byte_end":7187832,"line_start":1323,"line_end":1323,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187869,"byte_end":7187883,"line_start":1324,"line_end":1324,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187921,"byte_end":7187933,"line_start":1326,"line_end":1326,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187970,"byte_end":7187982,"line_start":1327,"line_end":1327,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187995,"byte_end":7188000,"line_start":1329,"line_end":1329,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7196120,"byte_end":7196128,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7196153,"byte_end":7196159,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199348,"byte_end":7199353,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7207877,"byte_end":7207883,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210223,"byte_end":7210229,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210640,"byte_end":7210652,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211001,"byte_end":7211009,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211173,"byte_end":7211181,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211194,"byte_end":7211202,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212131,"byte_end":7212139,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212356,"byte_end":7212364,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212705,"byte_end":7212713,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":259}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141443,"byte_end":7141447,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141484,"byte_end":7141488,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7141504,"byte_end":7141508,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142346,"byte_end":7142353,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142606,"byte_end":7142613,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/lock.rs","byte_start":7142976,"byte_end":7142983,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191726,"byte_end":7191731,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191769,"byte_end":7191774,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191791,"byte_end":7191795,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7191988,"byte_end":7191993,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/queue.rs","byte_start":7194890,"byte_end":7194895,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148521,"byte_end":7148541,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7148566,"byte_end":7148584,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149011,"byte_end":7149015,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":89}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149018,"byte_end":7149022,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":89}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149025,"byte_end":7149030,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1732},"to":{"krate":0,"index":89}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149055,"byte_end":7149070,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":363},"to":{"krate":0,"index":89}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7149594,"byte_end":7149611,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150154,"byte_end":7150163,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150443,"byte_end":7150452,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150462,"byte_end":7150471,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7150959,"byte_end":7150971,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151178,"byte_end":7151190,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151492,"byte_end":7151504,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":395},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7151520,"byte_end":7151532,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152132,"byte_end":7152144,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152301,"byte_end":7152313,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7152462,"byte_end":7152474,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7154570,"byte_end":7154580,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7157249,"byte_end":7157269,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7160127,"byte_end":7160145,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7167390,"byte_end":7167396,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7170363,"byte_end":7170378,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173248,"byte_end":7173254,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173346,"byte_end":7173361,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7173453,"byte_end":7173473,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7174574,"byte_end":7174592,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7175843,"byte_end":7175863,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176108,"byte_end":7176126,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7176405,"byte_end":7176413,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7179885,"byte_end":7179893,"line_start":1090,"line_end":1090,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7179925,"byte_end":7179933,"line_start":1092,"line_end":1092,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":370},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7180034,"byte_end":7180042,"line_start":1098,"line_end":1098,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":370},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7180922,"byte_end":7180930,"line_start":1125,"line_end":1125,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7182076,"byte_end":7182093,"line_start":1155,"line_end":1155,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7184769,"byte_end":7184786,"line_start":1224,"line_end":1224,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":376},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7184887,"byte_end":7184904,"line_start":1230,"line_end":1230,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":376},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7185780,"byte_end":7185797,"line_start":1257,"line_end":1257,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7186983,"byte_end":7186997,"line_start":1293,"line_end":1293,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187280,"byte_end":7187292,"line_start":1305,"line_end":1305,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187818,"byte_end":7187832,"line_start":1323,"line_end":1323,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187869,"byte_end":7187883,"line_start":1324,"line_end":1324,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187921,"byte_end":7187933,"line_start":1326,"line_end":1326,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187970,"byte_end":7187982,"line_start":1327,"line_end":1327,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/mpsc/mod.rs","byte_start":7187995,"byte_end":7188000,"line_start":1329,"line_end":1329,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7196120,"byte_end":7196128,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7196153,"byte_end":7196159,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7199348,"byte_end":7199353,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7207877,"byte_end":7207883,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210223,"byte_end":7210229,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7210640,"byte_end":7210652,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211001,"byte_end":7211009,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211173,"byte_end":7211181,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":490},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7211194,"byte_end":7211202,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212131,"byte_end":7212139,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212356,"byte_end":7212364,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":461},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/gui/.asdf/installs/rust/1.48.0/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.13/src/oneshot.rs","byte_start":7212705,"byte_end":7212713,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2255}}]}